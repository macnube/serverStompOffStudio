# import User, Course, Student, Studio, Room, BatchPayload, Teacher from "./generated/prisma.graphql"

type Query {
    teachers: [Teacher!]!
    studios: [Studio!]!
    studio(id: ID!): Studio!
    room(id: ID!): Room!
    roomsByStudio(studioId: ID!): [Room!]!
    studioByRoom(roomId: ID!): Studio!
    courses: [Course!]!
    course(id: ID!): Course!
    students: [Student!]!
}

type Mutation {
    createTeacher(name: String!, email: String!, mobile: String): Teacher
    deleteTeacher(id: ID!): Teacher
    updateTeacher(
        id: ID!
        name: String!
        email: String!
        mobile: String
    ): Teacher
    createStudio(name: String!, address: String!): Studio
    updateStudio(id: ID!, name: String!, address: String!): Studio
    deleteStudio(id: ID!): Studio
    createRoom(name: String!, capacity: Int!, studioId: ID!): Room
    deleteRoom(id: ID!): Room
    updateRoom(id: ID!, name: String!, capacity: Int!): Room
    createCourse(
        name: String!
        description: String
        startDate: DateTime
        startTime: String
        duration: Int
        studentLimit: Int
        roomId: ID!
    ): Course
    updateCourse(
        id: ID!
        name: String!
        description: String
        startDate: DateTime
        startTime: String
        duration: Int
        studentLimit: Int
    ): Course
    addTeacherToCourse(id: ID!, teacherId: ID!): Course
    removeTeacherFromCourse(id: ID!, teacherId: ID!): Course
    deleteCourse(id: ID!): Course
    createStudent(name: String!, email: String!, mobile: String): Student
    deleteStudent(id: ID!): Student
}
