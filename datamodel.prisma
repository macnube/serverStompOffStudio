type User {
  id: ID! @unique
  email: String @unique
  password: String!
  name: String!
  admin: Boolean! @default(value: "false")
}

type Student {
    id: ID! @unique
    name: String!
    email: String!
    mobile: String
    classes: [ClassStudent!]
    cards: [Card!]
    hasReferralBonus: Boolean! @default(value: "false")
} 

type Class {
    id: ID! @unique
    name: String!
    description: String
    startDate: DateTime
    teachers: [Teacher!]!
    students: [ClassStudent!]
    classHistory: [ClassInstance!]
    studentLimit: Int
}

type Attendee {
    id: ID! @unique
    student: Student!
    classInstance: ClassInstance!
}

type Absentee {
    id: ID! @unique
    student: Student!
    classInstance: ClassInstance!
}


enum DanceRole {
    Leader, Follower, Solo
}

type ClassStudent {
    id: ID! @unique
    student: Student!
    class: Class!
    role: DanceRole!
}

type Teacher {
    id: ID! @unique
    name: String
    email: String
    classes: [Class!]
}

type ClassInstance {
    id: ID! @unique
    parent: Class
    date: DateTime
    topic: String
    notes: String
    attendees: [Attendee!]
    absentees: [Absentee!]
}

type Card {
    id: ID! @unique
    student: Student
    payment: Payment
    startDate: DateTime
    expirationDate: DateTime
    validNumberOfClasses: Int!
    classes: [ClassInstance]
}

enum PaymentType {
    Class, Private, DropIn
}

type Payment {
    id: ID! @unique
    type: PaymentType!
    date: DateTime!
    amount: Int!
    student: Student
    card: Card
}
